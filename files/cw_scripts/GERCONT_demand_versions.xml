<?xml version="1.0" encoding="UTF-8"?>
<hash>
  <before-save>if @issue.tracker_id == @demand &amp;&amp; @issue.project.contracts.present?

  if (@issue.status_changed? &amp;&amp; @issue.status_id == @request_approval) || requested_versions_changed?
    
    @issue.sprint = @issue.product_backlog if @issue.sprint.blank? &amp;&amp; @issue.children?
    
    puts "====================== l(:default_role_technical_inspector) #{ l(:default_role_technical_inspector)} ========="
    technical_inspector = User.new
    if @issue.status_id == @request_approval
      
      technical_inspector = @issue.project.users.find do |u|
        roles = u.roles_for_project(@issue.project)
        roles &amp;&amp; roles.any? { |role| role&amp;.name == 'Fiscal Técnico' }
      end
      
      puts "====================== Fiscal Técnico #{ technical_inspector.name} ================="
    end
    @issue.assigned_to_id = technical_inspector.id

    @versions_in = requested_versions_is - requested_versions_was
    @versions_out = requested_versions_was - requested_versions_is

    @stories_to_demand.concat(
      stories_by_version_ids(@versions_in).map do |story|
        story
      end
    ) if @versions_in.present?

    @stories_out_demand.concat(
      stories_by_version_ids(@versions_out).map do |story|
        story
      end
    )if @versions_out.present?

  end
end</before-save>
  <after-save>demand_backlog = @issue.sprint
demand_backlog = create_demand_backlog if @issue.sprint.blank?

puts

if @stories_to_demand.present?
  @stories_to_demand.each do |story|
    story.parent = @issue
    story.sprint = demand_backlog
    story.custom_field_values=({@field_for_issue_in_pbi =&gt; false})
    story.save!
  end 
end

Version.where(id: @versions_in).update_all(status: 'requested')
Version.where(id: @versions_out).update_all(status: 'planning')

if @stories_out_demand.present?
  @stories_out_demand.each do |story|
      story.parent_id = nil
      story.sprint = @issue.project.product_backlogs.first
      story.custom_field_values=({@field_for_issue_in_pbi =&gt; true})
      story.save!
  end 
end</after-save>
  <name>GERCONT_demand_versions</name>
  <description></description>
  <is-for-all type="boolean">false</is-for-all>
  <author>diogo.neiva@saude.gov.br</author>
  <active type="boolean">true</active>
  <shared-code nil="true"/>
  <before-add nil="true"/>
  <after-add nil="true"/>
  <before-remove nil="true"/>
  <after-remove nil="true"/>
  <before-destroy></before-destroy>
  <after-destroy></after-destroy>
  <observable>issue</observable>
  <id type="integer">3</id>
  <created-at type="dateTime">2025-04-16T12:39:01Z</created-at>
  <updated-at type="dateTime">2025-04-18T01:51:54Z</updated-at>
  <string></string>
  <position type="integer">38</position>
  <integer type="integer">1</integer>
  <exported-at>2025-04-18T01:51:54Z</exported-at>
  <plugin-version>3.0.0</plugin-version>
  <ruby-version>3.3.7-p123</ruby-version>
  <rails-version>7.2.2.1</rails-version>
</hash>