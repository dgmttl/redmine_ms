<?xml version="1.0" encoding="UTF-8"?>
<hash>
  <before-save>if @issue.contracts_any? 
    
    #Avoid change tracker
    if !new_record? &amp;&amp; @issue.tracker_changed?
        raise RedmineCustomWorkflows::Errors::WorkflowError, l(:warning_cw_tracker_can_not_be_changed)
    end

    # Avoid create subtask
    if @issue.parent.present?
        if @issue.story? &amp;&amp; !@issue.parent.demand?
            raise RedmineCustomWorkflows::Errors::WorkflowError, l(:warning_cw_issue_story_can_not_be_created)
        end

        if @issue.task? &amp;&amp; !@issue.parent.demand?
            raise RedmineCustomWorkflows::Errors::WorkflowError, l(:warning_cw_issue_task_can_not_be_created)
        end

        if @issue.story?
            parent_versions_ids = parent.custom_field_value(CustomField.requested_versions.id).map(&amp;:to_i)
            if @issue.fixed_version.nil? || !parent_versions_ids.include?(@issue.fixed_version.id)
                parent_versions_names = Version.find(parent_versions_ids).map(&amp;:name).join(', ')
                raise RedmineCustomWorkflows::Errors::WorkflowError, 
                    l(:warning_cw_issue_story_can_not_be_created_missing_fixed_version, versions: parent_versions_names)
            end
        end
    end
    
    # Avoid approve demand
    if @issue.status == IssueStatus.approve &amp;&amp; @user_roles.include?(Role.contract_manager)
        if @issue.active_contracts.count &gt; 1
            raise RedmineCustomWorkflows::Errors::WorkflowError, l(:warning_cw_issue_demand_can_not_be_approved_many_open_contracts)
        elsif @issue.active_contracts.count == 0
            raise RedmineCustomWorkflows::Errors::WorkflowError, l(:warning_cw_issue_demand_can_not_be_approved_no_open_contracts)
        end
    end

    # Avoid missing non funcional requisites
    if @issue.status == IssueStatus.request_approval &amp;&amp; @issue.checklists.blank?
        raise RedmineCustomWorkflows::Errors::WorkflowError, l(:warning_cw_tracker_missing_non_functional_requisites)
    end

    # Avoid request work plan approval
    if @issue.status == IssueStatus.request_work_plan_approval
        if @issue.work_plan.sprints.blank?
            raise RedmineCustomWorkflows::Errors::WorkflowError, l(:warning_cw_issue_demand_can_not_request_work_approval_missing_sprints)
        elsif @issue.work_plan.work_plan_items.blank?
            raise RedmineCustomWorkflows::Errors::WorkflowError, l(:warning_cw_issue_demand_can_not_request_work_approval_missing_items)
        elsif @issue.work_plan.sprints.present?
            if missing_any_sprint?
                raise RedmineCustomWorkflows::Errors::WorkflowError, l(:warning_cw_issue_demand_can_not_request_work_approval_missing_items_in_all_sprints)
            end
        end
    end

    # Avoid change story and tasks
    if @issue.parent.present? &amp;&amp; (@issue.is_pbi? || @issue.is_task?)
        permited = [
            IssueStatus.plan_drafting, 
            IssueStatus.service_in_progress, 
            IssueStatus.request_work_plan_adjustment,
            IssueStatus.new_status
        ]
        unless permited.include?(@issue.parent.status)
            raise RedmineCustomWorkflows::Errors::WorkflowError, l(:warning_cw_issue_can_t_be_changed)
        end

    end
end
</before-save>
  <after-save></after-save>
  <name>GERCONT_validators</name>
  <description></description>
  <is-for-all type="boolean">false</is-for-all>
  <author>diogo.neiva@saude.gov.br</author>
  <active type="boolean">true</active>
  <shared-code nil="true"/>
  <before-add nil="true"/>
  <after-add nil="true"/>
  <before-remove nil="true"/>
  <after-remove nil="true"/>
  <before-destroy></before-destroy>
  <after-destroy></after-destroy>
  <observable>issue</observable>
  <id type="integer">44</id>
  <created-at type="dateTime">2025-04-27T18:11:44Z</created-at>
  <updated-at type="dateTime">2025-04-29T03:23:22Z</updated-at>
  <string></string>
  <position type="integer">4</position>
  <integer type="integer">1</integer>
  <exported-at>2025-04-29T03:23:22Z</exported-at>
  <plugin-version>3.0.0</plugin-version>
  <ruby-version>3.3.7-p123</ruby-version>
  <rails-version>7.2.2.1</rails-version>
</hash>